The ``1-my_list`` module

Importing the function from the module:
	>>> MyList = __import__("1-my_list").MyList

Checking that MyList inherits from list:
   >>> issubclass(MyList, list)
   True

Checking for empty list:
   >>> my_list = MyList()
   >>> my_list.print_sorted()
   []

Testing all sort:

    >>> my_list = MyList()
    >>> my_list.append(1)
    >>> my_list.append(4)
    >>> my_list.append(2)
    >>> my_list.append(3)
    >>> my_list.append(5)
    >>> my_list.print_sorted()
    [1, 2, 3, 4, 5]

    >>> my_list = MyList()
    >>> my_list.append(6)
    >>> my_list.append(6)
    >>> my_list.append(6)
    >>> my_list.append(6)
    >>> my_list.append(6)
    >>> my_list.print_sorted()
    [6, 6, 6, 6, 6]

Testing 1 append list:

    >>> my_list = MyList()
    >>> my_list.append(-8)
    >>> my_list.print_sorted()
    [-8]

    >>> my_list = MyList()
    >>> my_list.append(int('inf'))
    Traceback (most recent call last):
    ...
    ValueError: invalid literal for int() with base 10: 'inf'

    Checking for one negative number:
   >>> l.append(-1)
   >>> l.append(5)
   >>> print(l)
   [4, 3, 2, 1, -1, 5]
   >>> l.print_sorted()
   [-1, 1, 2, 3, 4, 5]
   >>> print(l)
   [4, 3, 2, 1, -1, 5]

Checking for all negative numbers:
   >>> l = MyList()
   >>> l.append(-10)
   >>> l.append(-1)
   >>> l.append(-7)
   >>> l.append(-2)
   >>> l.append(-8)
   >>> print(l)
   [-10, -1, -7, -2, -8]
   >>> l.print_sorted()
   [-10, -8, -7, -2, -1]
   >>> print(l)
   [-10, -1, -7, -2, -8]